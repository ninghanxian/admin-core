// Code generated by goctl. DO NOT EDIT.
// Source: core.proto

package server

import (
	"context"

	"github.com/qmcloud/admin-core/rpc/internal/logic/job/task"
	"github.com/qmcloud/admin-core/rpc/internal/logic/job/tasklog"
	"github.com/qmcloud/admin-core/rpc/internal/svc"
	"github.com/qmcloud/admin-core/rpc/types/core"
)

type JobServer struct {
	svcCtx *svc.ServiceContext
	core.UnimplementedJobServer
}

func NewJobServer(svcCtx *svc.ServiceContext) *JobServer {
	return &JobServer{
		svcCtx: svcCtx,
	}
}

func (s *JobServer) InitDatabase(ctx context.Context, in *core.Empty) (*core.BaseResp, error) {
	l := joblogic.NewInitDatabaseLogic(ctx, s.svcCtx)
	return l.InitDatabase(in)
}

// Task management
func (s *JobServer) CreateTask(ctx context.Context, in *core.TaskInfo) (*core.BaseIDResp, error) {
	l := task.NewCreateTaskLogic(ctx, s.svcCtx)
	return l.CreateTask(in)
}

func (s *JobServer) UpdateTask(ctx context.Context, in *core.TaskInfo) (*core.BaseResp, error) {
	l := task.NewUpdateTaskLogic(ctx, s.svcCtx)
	return l.UpdateTask(in)
}

func (s *JobServer) GetTaskList(ctx context.Context, in *core.TaskListReq) (*core.TaskListResp, error) {
	l := task.NewGetTaskListLogic(ctx, s.svcCtx)
	return l.GetTaskList(in)
}

func (s *JobServer) GetTaskById(ctx context.Context, in *core.IDReq) (*core.TaskInfo, error) {
	l := task.NewGetTaskByIdLogic(ctx, s.svcCtx)
	return l.GetTaskById(in)
}

func (s *JobServer) DeleteTask(ctx context.Context, in *core.IDsReq) (*core.BaseResp, error) {
	l := task.NewDeleteTaskLogic(ctx, s.svcCtx)
	return l.DeleteTask(in)
}

// TaskLog management
func (s *JobServer) CreateTaskLog(ctx context.Context, in *core.TaskLogInfo) (*core.BaseIDResp, error) {
	l := tasklog.NewCreateTaskLogLogic(ctx, s.svcCtx)
	return l.CreateTaskLog(in)
}

func (s *JobServer) UpdateTaskLog(ctx context.Context, in *core.TaskLogInfo) (*core.BaseResp, error) {
	l := tasklog.NewUpdateTaskLogLogic(ctx, s.svcCtx)
	return l.UpdateTaskLog(in)
}

func (s *JobServer) GetTaskLogList(ctx context.Context, in *core.TaskLogListReq) (*core.TaskLogListResp, error) {
	l := tasklog.NewGetTaskLogListLogic(ctx, s.svcCtx)
	return l.GetTaskLogList(in)
}

func (s *JobServer) GetTaskLogById(ctx context.Context, in *core.IDReq) (*core.TaskLogInfo, error) {
	l := tasklog.NewGetTaskLogByIdLogic(ctx, s.svcCtx)
	return l.GetTaskLogById(in)
}

func (s *JobServer) DeleteTaskLog(ctx context.Context, in *core.IDsReq) (*core.BaseResp, error) {
	l := tasklog.NewDeleteTaskLogLogic(ctx, s.svcCtx)
	return l.DeleteTaskLog(in)
}
